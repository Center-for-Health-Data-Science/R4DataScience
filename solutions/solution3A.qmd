---
title: "Exercise 3 A - Solutions"
format: html
project:
 type: website
 output-dir: ../docs
---

## Getting started 

1. Load packages. 

```{r message=FALSE, warning=FALSE}
library(tidyverse)
```

2. Load data from the `.rds` file you created in Exercise 2. Have a guess at what the function is called. 

```{r}
diabetes_glucose <- read_rds('../out/diabetes_glucose.rds')
head(diabetes_glucose)
```

## SECTION IN PROGRESS - CHECK NORMAL DISTRIBUTION

qqnorm plot of BMI. Is the BMI variable normally distributed?
```{r}
qqnorm(diabetes_glucose$BMI, pch = 1)
qqline(diabetes_glucose$BMI, col = "red", lwd = 2)
```

Cooks distance


shapiro test 
```{r}
shapiro.test(diabetes_glucose$BMI)
```



qqnorm plot of glucose 0. Is the glucose measurement at time 0 variable normally distributed?
```{r}
glucose_0 <- diabetes_glucose %>% 
  unnest(OGTT) %>% 
  filter(Measurement == 0) %>% 
  select(`Glucose (mmol/L)`) %>% 
  unlist() 

glucose_60 <- diabetes_glucose %>% 
  unnest(OGTT) %>% 
  filter(Measurement == 60) %>% 
  select(`Glucose (mmol/L)`) %>% 
  unlist() 

glucose_120 <- diabetes_glucose %>% 
  unnest(OGTT) %>% 
  filter(Measurement == 120) %>% 
  select(`Glucose (mmol/L)`) %>% 
  unlist() 
```

```{r}
qqnorm(glucose_0, pch = 1)
qqline(glucose_0, col = "red", lwd = 2)
```

```{r}
qqnorm(glucose_60, pch = 1)
qqline(glucose_60, col = "red", lwd = 2)
```

```{r}
qqnorm(glucose_120, pch = 1)
qqline(glucose_120, col = "red", lwd = 2)
```

shapiro test 
```{r}
shapiro.test(glucose_0)
shapiro.test(glucose_60)
shapiro.test(glucose_120)
```


## Plotting - Part 1
You will first do some basic plots to get started with ggplot again. 

If it has been a while since you worked with ggplot, have a look at the [ggplot material](https://center-for-health-data-science.github.io/FromExceltoR/Presentations/presentation3.html) from the FromExceltoR course.

3. Create a scatter plot of `Age` and `Blood Pressure`. Do you notice a trend?

```{r}
diabetes_glucose %>% 
  ggplot(aes(x = BloodPressure, 
             y = Age)) + 
  geom_point() 
```

4. Create a scatter plot of `PhysicalActivity` and `BMI.` Do you notice a trend?
```{r}
diabetes_glucose %>% 
  ggplot(aes(x = PhysicalActivity, 
             y = BMI)) + 
  geom_point() 
```

5. Now, create the same two plots as before, but this time stratify them by `Diabetes`. Do you notice any trends?

```{r}
diabetes_glucose %>% 
  ggplot(aes(x = BloodPressure, 
             y = Age, 
             color = Diabetes)) + 
  geom_point()
```

```{r}
diabetes_glucose %>% 
  ggplot(aes(x = PhysicalActivity, 
             y = BMI, 
             color = Diabetes)) + 
  geom_point() 
```

6. Create a boxplot of `BMI` stratified by `Diabetes.` Give the plot a meaningful title.
```{r}
diabetes_glucose %>% 
  ggplot(aes(y = BMI, 
             x = Diabetes, 
             color = Diabetes)) + 
  geom_boxplot() + 
  labs(title = 'Distribution of BMI Stratified by Diabetes')
```

7. Create a geom_violin of `PhysicalActivity` stratified by `Smoker`. Add horizontal lines at the 25%, 50%, and 75% quantiles of each violin plot. Give the plot a meaningful title.
```{r}
diabetes_glucose %>% 
  ggplot(aes(y = PhysicalActivity, 
             x = Smoker, 
             color = Smoker)) + 
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75)) + 
  labs(title = 'Distribution of Physical Activity Stratified by Smoker Status')
```

## Plotting - Part 2
In order to plot the data inside the nested variable, the data needs to be unnested. 

8. Create a `ggridges::geom_density_ridges` plot of the glucose measurements at time 0 stratified by `Diabetes`. What kind of plot is this? Give the plot a meaningful title.
```{r}
library(ggridges)

diabetes_glucose %>%
  unnest(OGTT) %>% 
  filter(Measurement == 0) %>% 
  ggplot(aes(x = `Glucose (mmol/L)`, 
             y = Diabetes,
             group = Diabetes)) +
  geom_density_ridges(alpha = 0.5) + 
  labs(title = 'Glucose Measurement for Time Point 0 (fasted)')
```

9. Create these boxplots for each time point (0, 60, 120) by using faceting by `Measurement`. Give the plot a meaningful title.

```{r}
diabetes_glucose %>%
  unnest(OGTT) %>% 
  ggplot(aes(y = `Glucose (mmol/L)`, 
             x = Diabetes, 
             color = Diabetes)) +
  geom_boxplot() + 
  facet_wrap(vars(Measurement)) + 
  labs(title = 'Glucose Measurements for Time Point 0, 60, and 120')
```












